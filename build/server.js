// Generated by CoffeeScript 1.8.0
var americano, application, autostart, controller, init;

americano = require('americano');

init = require('./server/initialize');

autostart = require('./server/lib/autostart');

controller = require('./server/lib/controller');

application = module.exports = function(callback) {
  var err, options;
  if ((process.env.USER != null) && process.env.USER !== 'root') {
    err = "Are you sure, you are root ?";
    console.log(err);
    if (callback != null) {
      return callback(err);
    }
  } else {
    options = {
      name: 'controller',
      port: process.env.PORT || 9002,
      host: process.env.HOST || "127.0.0.1",
      root: __dirname
    };
    init.init((function(_this) {
      return function(err) {
        if (err != null) {
          console.log("Error during configuration initialization : ");
          console.log(err);
          callback(err);
        }
        return autostart.start(function(err) {
          if (err == null) {
            return americano.start(options, callback);
          } else {
            console.log("Error during autostart : ");
            console.log(err);
            if (callback != null) {
              return callback(err);
            }
          }
        });
      };
    })(this));
    process.on('uncaughtException', function(err) {
      console.log("WARNING : ");
      console.log(err);
      return console.log(err.stack);
    });
    process.on('exit', function(code) {
      console.log("Process exit with code " + code);
      return controller.stopAll((function(_this) {
        return function() {
          return process.exit(code);
        };
      })(this));
    });
    return process.on('SIGTERM', function() {
      console.log("Process is stopped");
      return controller.stopAll((function(_this) {
        return function() {
          return process.exit(code);
        };
      })(this));
    });
  }
};

if (!module.parent) {
  application();
}
