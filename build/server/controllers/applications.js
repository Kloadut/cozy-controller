// Generated by CoffeeScript 1.8.0
var controller;

controller = require('../lib/controller');

module.exports.install = (function(_this) {
  return function(req, res, next) {
    var manifest;
    if (req.body.start == null) {
      res.send(400, {
        error: "Manifest should be declared in body.start"
      });
    }
    manifest = req.body.start;
    return controller.install(manifest, function(err, result) {
      if (err != null) {
        return res.send(400, {
          error: err
        });
      } else {
        return res.send(200, {
          "drone": {
            "port": result.port
          }
        });
      }
    });
  };
})(this);

module.exports.start = function(req, res, next) {
  var manifest;
  if (req.body.start == null) {
    res.send(400, {
      error: "Manifest should be declared in body.start"
    });
  }
  manifest = req.body.start;
  return controller.start(manifest, (function(_this) {
    return function(err, result) {
      if (err) {
        return res.send(400, {
          error: err
        });
      } else {
        return res.send(200, {
          "drone": {
            "port": result.port
          }
        });
      }
    };
  })(this));
};

module.exports.stop = function(req, res, next) {
  var name;
  if (!req.body.stop || !req.body.stop.name) {
    res.send(400, {
      error: "Application name should be declared in body.stop.name"
    });
  }
  name = req.body.stop.name;
  return controller.stop(name, (function(_this) {
    return function(err, result) {
      if (err != null) {
        return res.send(400, {
          error: err.toString()
        });
      } else {
        return res.send(200, {
          app: result
        });
      }
    };
  })(this));
};

module.exports.uninstall = function(req, res, next) {
  var name;
  if (!req.body.name) {
    res.send(400, {
      error: "Application name should be declared in body.name"
    });
  }
  name = req.body.name;
  console.log(name);
  return controller.uninstall(name, (function(_this) {
    return function(err, result) {
      if (err) {
        return res.send(400, {
          error: err
        });
      } else {
        return res.send(200, {
          app: result
        });
      }
    };
  })(this));
};

module.exports.update = function(req, res, next) {
  var name;
  if (!req.body.update || !req.body.update.name) {
    res.send(400, {
      error: "Application name should be declared in body.update.name"
    });
  }
  name = req.body.update.name;
  return controller.update(name, (function(_this) {
    return function(err, result) {
      if (err) {
        return res.send(400, {
          error: err
        });
      } else {
        return res.send(200, {
          app: result
        });
      }
    };
  })(this));
};

module.exports.all = function(req, res, next) {
  return controller.all((function(_this) {
    return function(err, result) {
      if (err) {
        return res.send(400, {
          error: err
        });
      } else {
        return res.send(200, {
          app: result
        });
      }
    };
  })(this));
};

module.exports.running = function(req, res, next) {
  return controller.running((function(_this) {
    return function(err, result) {
      if (err) {
        return res.send(400, {
          error: err
        });
      } else {
        return res.send(200, {
          app: result
        });
      }
    };
  })(this));
};
